apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloud-manager-sandbox.fullname" . }}
  labels:
    {{- include "cloud-manager-sandbox.labels" . | nindent 4 }}
spec:
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0%
    type: RollingUpdate
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cloud-manager-sandbox.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cloud-manager-sandbox.labels" . | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
              - key: agentpool
                operator: NotIn
                values:
                - pool
      restartPolicy: Always
      terminationGracePeriodSeconds: {{ .Values.container.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "cloud-manager-sandbox.imageName" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: communication
              containerPort: 3000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          lifecycle:
            preStop:
              exec:
                command: 
                - /bin/sh
                - -c
                - echo "`date -u +%Y-%m-%dT%H:%M:%SZ` - Starting {{ .Values.container.preStopSleepTime }} second sleep" >> /dev/termination-log; sleep {{ .Values.container.preStopSleepTime }}; while [ $(pgrep pwsh) > 0 ]; do echo "`date -u +%Y-%m-%dT%H:%M:%SZ` - Waiting for pwsh end..." >> /dev/termination-log; sleep 5; done; echo "Sandbox terminating now" >> /dev/termination-log
            postStart:
              exec:
                command:
                - /bin/sh
                - -c
                - "/bin/echo 'options single-request-reopen' >> /etc/resolv.conf"
